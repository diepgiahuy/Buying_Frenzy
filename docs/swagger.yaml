definitions:
  api.listRestaurantRequest:
    properties:
      date:
        description: Date with format 2006-01-02 15:04:05
        type: string
      pageID:
        description: Page wants to get
        type: integer
      pageSize:
        description: Number of data in page min is 5 and max is 10
        type: integer
    required:
    - pageID
    - pageSize
    type: object
  api.listRestaurantWithDishesRequest:
    properties:
      comparison:
        description: Param to get more of less dish to compare, With 0 is more and
          1 is less otherwise throw error
        type: integer
      highPrice:
        description: Higher price min = 0 and greater than Lower Price
        type: number
      lowPrice:
        description: Lower price min = 0
        type: number
      numDishes:
        description: Param to find number of dishes in restaurant within a price range
        type: integer
      topList:
        description: For get Top Y restaurants
        type: integer
    required:
    - comparison
    - highPrice
    - lowPrice
    - numDishes
    - topList
    type: object
  api.paginationRequest:
    properties:
      pageID:
        description: Page wants to get
        type: integer
      pageSize:
        description: Number of data in page min is 5 and max is 10
        type: integer
    required:
    - pageID
    - pageSize
    type: object
  api.purchaseRequest:
    properties:
      dish_name:
        type: string
      restaurant_id:
        type: integer
      user_id:
        type: integer
    required:
    - dish_name
    - restaurant_id
    - user_id
    type: object
  model.Menu:
    properties:
      dishName:
        type: string
      id:
        type: integer
      price:
        type: number
      restaurantID:
        type: integer
    type: object
  model.OperationHour:
    properties:
      closeHour:
        type: string
      createdAt:
        type: string
      day:
        type: string
      id:
        type: integer
      openHour:
        type: string
      restaurantID:
        type: integer
      updatedAt:
        type: string
    type: object
  model.Restaurant:
    properties:
      cashBalance:
        type: number
      createdAt:
        type: string
      id:
        type: integer
      menu:
        items:
          $ref: '#/definitions/model.Menu'
        type: array
      operationHour:
        items:
          $ref: '#/definitions/model.OperationHour'
        type: array
      restaurantName:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /api/v1/purchase:
    post:
      consumes:
      - application/json
      description: Process a user purchasing a dish from a restaurant
      parameters:
      - description: Purchase Request with UserId min=0 , RestaurantID min = 1, DishName
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/api.purchaseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg": "Successfully Purchase Order"}'
          schema:
            type: string
        "400":
          description: '{"err": "err string"}'
          schema:
            type: string
      summary: createOrder
  /api/v1/restaurants:
    get:
      description: Get list restaurant open at certain date time
      parameters:
      - description: Date with format 2006-01-02 15:04:05
        in: query
        name: date
        type: string
      - description: Page wants to get
        in: query
        name: pageID
        required: true
        type: integer
      - description: Number of data in page min is 5 and max is 10
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Restaurant'
            type: array
        "400":
          description: '{"err": "err string"}'
          schema:
            type: string
      summary: listRestaurantsOpen
  /api/v1/restaurants/{name}:
    get:
      description: Search for restaurants by name, ranked by relevance to search term.
      parameters:
      - description: Page wants to get
        in: query
        name: pageID
        required: true
        type: integer
      - description: Number of data in page min is 5 and max is 10
        in: query
        name: pageSize
        required: true
        type: integer
      - description: Restaurant Name
        in: path
        name: restaurant
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Restaurant'
            type: array
        "400":
          description: '{"err": "err string"}'
          schema:
            type: string
      summary: listRestaurantsByName
  /api/v1/restaurants/dish/{name}:
    get:
      description: Search for dish by name, ranked by relevance to search term.
      parameters:
      - description: Page wants to get
        in: query
        name: pageID
        required: true
        type: integer
      - description: Number of data in page min is 5 and max is 10
        in: query
        name: pageSize
        required: true
        type: integer
      - description: Dish Name
        in: path
        name: restaurant
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Menu'
            type: array
        "400":
          description: '{"err": "err string"}'
          schema:
            type: string
      summary: listDishByName
  /api/v1/restaurants/top-list-with-price:
    get:
      description: List top y restaurants that have more or less than x number of
        dishes within a price range, ranked alphabetically.
      parameters:
      - description: Param to get more of less dish to compare, With 0 is more and
          1 is less otherwise throw error
        in: query
        name: comparison
        required: true
        type: integer
      - description: Higher price min = 0 and greater than Lower Price
        in: query
        name: highPrice
        required: true
        type: number
      - description: Lower price min = 0
        in: query
        name: lowPrice
        required: true
        type: number
      - description: Param to find number of dishes in restaurant within a price range
        in: query
        name: numDishes
        required: true
        type: integer
      - description: For get Top Y restaurants
        in: query
        name: topList
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Restaurant'
            type: array
        "400":
          description: '{"err": "err string"}'
          schema:
            type: string
      summary: listRestaurantsWithComparison
swagger: "2.0"
